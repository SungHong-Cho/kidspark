$(function(){
    setInterval(update_latest_photos, 3000);
});

function update_latest_photos(){
//    var request_time = Math.round(new Date().getTime() / 1000);
      var request_time = parseInt($("#last_update_time").val());

    $.ajax({
        type: 'get',
        url: '/photos/index',
        dataType: "json",
        data: { last_update_time : request_time } ,
        success: function(data) {
            console.log(data);
            $("#last_update_time").val( data["time_is"] );
            var next_photo_count = parseInt($("#photo_count").text().replace(/,/g, '')) + data["photos"].length;
            $("#photo_count").text(next_photo_count);

            $.each(data["photos"], function(index, value){
                var dateTime = new Date(value.created_at).format("yyyy-MM-dd hh:mm:ss");

                var photo_box =
                    "<div class='box'>" +
                    "<div class='photo_box'>" +
                    "<a href='/photos/detail/" + value._id + "'>" +
                    "<img src='" + url_n(value) + "' alt='" + dateTime + "'/>" +
                    "</a></div>" + "<div class='meta_box'>";

                if( !!data["admin"] )
                    photo_box += "<input type='checkbox' name='photo_ids[]' value='" + value._id + "'></input>";

                photo_box += dateTime + "</div>" + "</div>";
                $("#photo_area").prepend(photo_box);
            });
            /*
            var new_photo = $("#photo_area a:first-child").clone();

            if(!!new_photo){
                new_photo.attr("href", data.url);
                new_photo.child("img").attr("src", data.image_src);
                new_photo.child(".meta_box").text(data.time);
                $("#photo_area").append(new_photo);
            };*/

        }
    });
}

/*! sprintf.js | Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro> | 3 clause BSD license */(function(e){function r(e){return Object.prototype.toString.call(e).slice(8,-1).toLowerCase()}function i(e,t){for(var n=[];t>0;n[--t]=e);return n.join("")}var t=function(){return t.cache.hasOwnProperty(arguments[0])||(t.cache[arguments[0]]=t.parse(arguments[0])),t.format.call(null,t.cache[arguments[0]],arguments)};t.format=function(e,n){var s=1,o=e.length,u="",a,f=[],l,c,h,p,d,v;for(l=0;l<o;l++){u=r(e[l]);if(u==="string")f.push(e[l]);else if(u==="array"){h=e[l];if(h[2]){a=n[s];for(c=0;c<h[2].length;c++){if(!a.hasOwnProperty(h[2][c]))throw t('[sprintf] property "%s" does not exist',h[2][c]);a=a[h[2][c]]}}else h[1]?a=n[h[1]]:a=n[s++];if(/[^s]/.test(h[8])&&r(a)!="number")throw t("[sprintf] expecting number but found %s",r(a));switch(h[8]){case"b":a=a.toString(2);break;case"c":a=String.fromCharCode(a);break;case"d":a=parseInt(a,10);break;case"e":a=h[7]?a.toExponential(h[7]):a.toExponential();break;case"f":a=h[7]?parseFloat(a).toFixed(h[7]):parseFloat(a);break;case"o":a=a.toString(8);break;case"s":a=(a=String(a))&&h[7]?a.substring(0,h[7]):a;break;case"u":a>>>=0;break;case"x":a=a.toString(16);break;case"X":a=a.toString(16).toUpperCase()}a=/[def]/.test(h[8])&&h[3]&&a>=0?"+"+a:a,d=h[4]?h[4]=="0"?"0":h[4].charAt(1):" ",v=h[6]-String(a).length,p=h[6]?i(d,v):"",f.push(h[5]?a+p:p+a)}}return f.join("")},t.cache={},t.parse=function(e){var t=e,n=[],r=[],i=0;while(t){if((n=/^[^\x25]+/.exec(t))!==null)r.push(n[0]);else if((n=/^\x25{2}/.exec(t))!==null)r.push("%");else{if((n=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(t))===null)throw"[sprintf] huh?";if(n[2]){i|=1;var s=[],o=n[2],u=[];if((u=/^([a-z_][a-z_\d]*)/i.exec(o))===null)throw"[sprintf] huh?";s.push(u[1]);while((o=o.substring(u[0].length))!=="")if((u=/^\.([a-z_][a-z_\d]*)/i.exec(o))!==null)s.push(u[1]);else{if((u=/^\[(\d+)\]/.exec(o))===null)throw"[sprintf] huh?";s.push(u[1])}n[2]=s}else i|=2;if(i===3)throw"[sprintf] mixing positional and named placeholders is not (yet) supported";r.push(n)}t=t.substring(n[0].length)}return r};var n=function(e,n,r){return r=n.slice(0),r.splice(0,0,e),t.apply(null,r)};e.sprintf=t,e.vsprintf=n})(typeof exports!="undefined"?exports:window);

var PHOTO_SOURCE_URL = 'http://farm%s.staticflickr.com/%s/%s_%s%s.%s';
var URL_PROFILE = 'http://www.flickr.com/people/';
var URL_PHOTOSTREAM = 'http://www.flickr.com/photos/';
var URL_SHORT = 'http://flic.kr/p/';

function url(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "", "jpg");
};

function url_m(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_m", "jpg");
};

function url_s(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_s", "jpg");
};

function url_t(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_t", "jpg");
};

function url_b(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_b", "jpg");
};

function url_z(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_z", "jpg");
};

function url_q(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_q", "jpg");
};

function url_n(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_n", "jpg");
};

function url_c(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_c", "jpg");
};

function url_o(data){
    return sprintf(PHOTO_SOURCE_URL, data.farm, data.server, data.flickr_id, data.secret, "_o", "png");
};

function url_short(data) {
    return URL_SHORT + base58(data.flickr_id);
}

var Base58 = (function() {
    var
    BASE58_CHARS = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";

    return {
        numberToAlpha: function(number) {
            var buffer = '';
            do {
                buffer = buffer + BASE58_CHARS[number % BASE58_CHARS.length];
                number = (number / BASE58_CHARS.length) >> 0;
            } while (number > 0);
            return buffer;
        },

        alphaToNumber: function(chars) {
            var result = 0, multiplier = 1, index = 0;
            for (; index < chars.length; index++) {
                var c = chars[index];
                var digit;
                if (c >= '1' && c <= '9') {
                    digit = c - '1';
                } else if (c >= 'A' && c < 'I') {
                    digit = (c - 'A') + 9;
                } else if (c > 'I' && c < 'O') {
                    digit = (c - 'J') + 17;
                } else if (c > 'O' && c <= 'Z') {
                    digit = (c - 'P') + 22;
                } else if (c >= 'a' && c < 'l') {
                    digit = (c - 'a') + 33;
                } else if (c > 'l' && c <= 'z') {
                    digit = (c - 'l') + 43;
                } else {
                    throw new Error("Illegal character found: '" + c + "'");
                }
                result += digit * multiplier;
                multiplier = multiplier * BASE58_CHARS.length;
            }
            return result;
        }
    };

})();

function url_short_m(data) {
    return URL_SHORT + "img/" + Base58.numberToAlpha(data.flickr_id) + "_m.jpg";
}

function url_short_s(data) {
    return URL_SHORT + "img/" + Base58.numberToAlpha(data.flickr_id) + ".jpg";
}

function url_short_t(data) {
    return URL_SHORT + "img/" + Base58.numberToAlpha(data.flickr_id) + "_t.jpg";
}

function url_short_q(data) {
    return URL_SHORT + "img/" + Base58.numberToAlpha(data.flickr_id) + "_q.jpg";
}

function url_short_n(data) {
    return URL_SHORT + "img/" + Base58.numberToAlpha(data.flickr_id) + "_n.jpg";
}

Date.prototype.format = function(f) {
    if (!this.valueOf()) return " ";

    var weekName = ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"];
    var d = this;

    return f.replace(/(yyyy|yy|MM|dd|E|hh|mm|ss|a\/p)/gi, function($1) {
        switch ($1) {
            case "yyyy": return d.getFullYear();
            case "yy": return (d.getFullYear() % 1000).zf(2);
            case "MM": return (d.getMonth() + 1).zf(2);
            case "dd": return d.getDate().zf(2);
            case "E": return weekName[d.getDay()];
            case "HH": return d.getHours().zf(2);
            case "hh": return ((h = d.getHours() % 12) ? h : 12).zf(2);
            case "mm": return d.getMinutes().zf(2);
            case "ss": return d.getSeconds().zf(2);
            case "a/p": return d.getHours() < 12 ? "오전" : "오후";
            default: return $1;
        }
    });
};

String.prototype.string = function(len){var s = '', i = 0; while (i++ < len) { s += this; } return s;};
String.prototype.zf = function(len){return "0".string(len - this.length) + this;};
Number.prototype.zf = function(len){return this.toString().zf(len);};
